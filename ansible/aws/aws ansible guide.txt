---

# Ansible for AWS – Complete Guide

## 1️⃣ Prerequisites

* Control Node: Ubuntu or any machine with Ansible installed
* AWS Account: Access to create IAM users and resources

## 2️⃣ Setup Python and Boto3

```bash
sudo apt update
sudo apt install -y python3-pip
pip3 install boto3 botocore
python3 -m pip show boto3
```

## 3️⃣ Create an IAM User for Ansible

1. AWS Console → IAM → Users → Add user
2. Select **Programmatic access**
3. Attach policy: AmazonEC2FullAccess (or custom)
4. Download CSV containing AWS\_ACCESS\_KEY\_ID and AWS\_SECRET\_ACCESS\_KEY

## 4️⃣ Configure Environment Variables

```bash
export AWS_ACCESS_KEY_ID=<Your Access Key>
export AWS_SECRET_ACCESS_KEY=<Your Secret Key>
export AWS_DEFAULT_REGION=us-west-2
```

Persist in bashrc:

```bash
echo "export AWS_ACCESS_KEY_ID=<Your Access Key>" >> ~/.bashrc
echo "export AWS_SECRET_ACCESS_KEY=<Your Secret Key>" >> ~/.bashrc
echo "export AWS_DEFAULT_REGION=us-west-2" >> ~/.bashrc
source ~/.bashrc
```

## 5️⃣ Sample Playbook to Work with AWS

```yaml
---
- name: AWS EC2 Automation
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    key_name: mykeypair
    instance_type: t2.micro
    ami: ami-0abcdef1234567890  # Replace with Ubuntu AMI in us-west-2
    region: us-west-2
    count: 1
  tasks:
    - name: Create new EC2 key pair
      amazon.aws.ec2_key:
        name: "{{ key_name }}"
        region: "{{ region }}"
      register: keyout

    - name: Print private key
      debug:
        msg: "{{ keyout.key.private_key }}"
      when: keyout.changed

    - name: Save private key to file
      copy:
        content: "{{ keyout.key.private_key }}"
        dest: "./{{ key_name }}.pem"
        mode: '0600'
      when: keyout.changed

    - name: Launch EC2 instance
      amazon.aws.ec2_instance:
        name: demo-ubuntu
        key_name: "{{ key_name }}"
        instance_type: "{{ instance_type }}"
        image_id: "{{ ami }}"
        count: "{{ count }}"
        region: "{{ region }}"
        wait: yes
        assign_public_ip: yes
        vpc_subnet_id: ""       # Optional: default subnet
        security_group: "default"
      register: ec2
```

## 6️⃣ Notes

* Fact handling: `keyout.changed` ensures key printed/saved only if created
* Install AWS collection: `ansible-galaxy collection install amazon.aws`
* Replace AMI ID with valid Ubuntu AMI from us-west-2

## 7️⃣ Useful Links

* [Ansible AWS Modules](https://docs.ansible.com/ansible/latest/collections/amazon/aws/index.html)
* [Boto3 Documentation](https://boto3.amazonaws.com/v1/documentation/api/latest/index.html)
