
Dockerfile - Detailed Explanation

1. What is a Dockerfile?
A Dockerfile is a text file containing a set of instructions that define how a Docker image should be built. 
It automates the process of creating container images by specifying:
- Base image to use
- Application code & dependencies
- Environment variables
- Commands to run during image build
- Startup command when the container launches

Think of a Dockerfile like a recipe for building an image.

------------------------------------------------------------
2. Structure of a Dockerfile
A Dockerfile is a set of instructions, each instruction creates a layer in the Docker image. 
Layers are cached, so builds are faster.

------------------------------------------------------------
3. Dockerfile Instructions (Components)

FROM:
- Sets the base image.
Example: FROM ubuntu:20.04

LABEL:
- Adds metadata to the image.
Example: LABEL maintainer="utkarsh@example.com"

RUN:
- Executes a command inside the image at build time.
Example: RUN apt-get update && apt-get install -y python3

WORKDIR:
- Sets the working directory inside the container.
Example: WORKDIR /app

COPY:
- Copies files from local machine to container.
Example: COPY requirements.txt /app/

ADD:
- Similar to COPY but can extract tar and copy from URLs.
Example: ADD app.tar.gz /app/

ENV:
- Sets environment variables inside the container.
Example: ENV APP_ENV=production

EXPOSE:
- Documents which ports the container listens on.
Example: EXPOSE 5000

CMD:
- Defines default command when container starts (only one allowed).
Example: CMD ["python3", "app.py"]

ENTRYPOINT:
- Defines main executable, cannot be overridden easily.
Example: ENTRYPOINT ["python3", "app.py"]

ARG:
- Defines build-time variables (not available at runtime).
Example: ARG VERSION=1.0

VOLUME:
- Defines a mount point for persistent storage.
Example: VOLUME /var/lib/mysql

USER:
- Sets the user to run commands in the container.
Example: USER appuser

HEALTHCHECK:
- Defines how Docker checks if the container is healthy.
Example: HEALTHCHECK CMD curl -f http://localhost:5000/health || exit 1

ONBUILD:
- Defines instructions triggered when the image is used as a base image.
Example: ONBUILD RUN pip install -r requirements.txt

------------------------------------------------------------
4. Example: Python Web Application Dockerfile

FROM python:3.9-slim
LABEL maintainer="utkarsh@example.com"
WORKDIR /app
COPY requirements.txt /app/
RUN pip install --no-cache-dir -r requirements.txt
COPY . /app/
ENV PORT=5000
EXPOSE 5000
CMD ["python", "app.py"]

------------------------------------------------------------
5. Building & Running the Image

Build the image:
docker build -t my-python-app .

Run the container:
docker run -d -p 5000:5000 my-python-app

------------------------------------------------------------
6. Benefits of Dockerfile
- Automation: Repeatable builds
- Portability: Same image runs on any system
- Versioning: Can be tracked in Git
- Efficiency: Layer caching makes builds faster
- Consistency: Eliminates "works on my machine" issue
